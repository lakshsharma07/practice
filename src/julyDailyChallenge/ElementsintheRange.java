package julyDailyChallenge;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import java.util.TreeSet;

public class ElementsintheRange {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int N = 951, A = 165, B = 564;
		int[] arr = {853,215,677,466,829,935,567,517,231,72,883,994,86,998,358,902,484,750,13,545,50,325,755,136,679,170,895,521,472,560,272,325,126,948,142,307,234,708,823,816,779,57,161,216,54,518,117,890,619,130,434,668,454,540,155,484,61,50,356,533,961,979,857,86,926,350,392,511,409,214,326,539,622,486,755,28,355,871,917,974,1000,702,641,805,593,796,288,653,197,996,185,157,974,393,594,252,94,986,762,502,551,440,41,525,925,147,552,280,369,468,605,369,521,245,525,113,392,165,117,940,160,654,96,485,46,42,736,140,379,498,993,281,937,385,805,213,531,356,844,252,175,448,620,695,45,496,159,436,12,628,376,171,281,823,8,326,216,743,817,594,592,162,875,880,546,679,93,429,35,288,680,561,736,651,608,780,498,766,567,510,393,294,32,25,469,39,351,684,782,519,630,725,32,504,605,930,534,49,358,920,336,389,481,71,391,88,202,888,205,121,749,950,414,781,974,234,819,676,270,952,547,899,677,578,754,633,507,287,681,216,559,16,956,391,439,346,478,640,586,34,112,334,983,878,114,309,111,285,336,380,588,882,630,616,812,383,248,318,22,928,886,932,944,841,322,734,187,151,373,124,184,485,457,519,714,923,827,824,559,162,556,498,396,537,114,207,272,361,876,645,641,761,576,936,602,897,669,140,399,393,263,582,229,71,100,942,345,278,766,903,792,673,401,539,209,866,745,832,578,620,476,218,733,51,505,686,299,173,177,697,566,791,631,794,861,730,88,206,360,853,460,503,877,212,41,437,77,137,269,7,108,744,576,840,147,81,525,445,253,53,494,170,843,124,316,704,205,403,261,916,607,72,418,483,636,810,271,64,946,891,70,54,635,646,893,133,726,770,929,330,822,422,852,665,897,167,720,102,569,332,369,527,755,787,361,390,596,631,454,542,522,523,595,508,520,839,640,597,960,920,279,782,694,130,798,590,648,517,43,568,200,412,94,954,550,454,696,145,84,149,38,957,23,984,464,895,823,455,491,782,727,769,915,420,250,712,361,897,580,404,464,131,815,557,437,364,362,132,860,798,632,250,754,654,233,570,900,407,376,391,189,102,511,455,521,761,167,882,9,98,637,473,229,803,381,665,518,743,148,377,540,779,626,645,784,211,214,684,617,590,74,157,43,936,612,916,48,130,149,57,227,785,529,455,587,261,471,456,3,618,184,894,748,810,539,532,372,104,215,988,693,640,145,88,575,756,3,623,885,151,679,463,935,559,270,873,819,92,328,174,710,511,67,457,672,957,340,43,61,554,383,105,193,527,192,120,634,194,742,870,696,772,684,982,330,953,854,500,45,533,673,106,396,92,914,419,48,254,462,108,807,196,213,352,74,756,471,59,302,564,928,997,335,611,331,16,916,536,515,960,69,540,65,816,631,330,234,30,583,47,138,742,242,702,445,315,809,915,373,110,830,652,459,164,615,141,531,530,676,45,841,96,936,257,911,566,586,145,948,169,543,85,262,785,138,706,451,298,972,824,408,801,827,218,316,441,358,846,970,385,242,810,481,178,418,743,95,4,239,42,172,782,478,785,566,967,490,16,265,461,191,24,261,18,593,928,810,302,773,780,686,366,941,518,543,359,261,990,714,499,383,237,632,213,21,549,179,510,917,795,322,107,818,934,476,410,861,286,63,633,417,749,998,709,266,893,419,878,234,132,729,616,368,360,180,388,909,359,249,177,153,570,283,323,503,111,84,363,748,147,347,164,247,697,224,512,589,643,742,174,774,470,141,142,181,321,881,441,31,130,617,535,699,252,857,202,714,293,916,461,439,263,976,685,959,199,548,899,841,641,424,615,462,564,108,995,884,988,435,914,117,404,449,168,7,657,721,720,949,636,180,739,250,155,775,208,705,323,458,546,315,233,512,777,797,619,771,32,958,557,946,427,960,746,594,966,754,314,37,703,301,568,793,551,74,568,110,779,242,920,324,556,152,835,332,948,805,102,980,762,659,277,540,970,374,133,288,127,798,676,181,99,244,974,649,317,541,758,95,782,29,770,689,181,956,21,128,760,474,459,874,484,735,413,454,460,898,93,587,695,768,119,145,11,92,145,680,984,255,126,117,283,896,806,463,851,826,591,963,651,401,188,135,136,952,588,595,849,32,533,896};
		System.out.println(check_elements(arr, N, A, B));

	}

	static boolean check_elements(int arr[], int n, int A, int B) {
		if (A < 0 || B > n && B < A) {
			return false;
		}
		Set<Integer> set = new HashSet<>();
		for (int i = 0; i < n; i++) {
			set.add(arr[i]);
		}
		for (int j = A; j <= B; j++) {
			if (!set.contains(j)) {
				return false;
			}
		}

		return true;

	}

}
